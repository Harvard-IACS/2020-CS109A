{
    "metadata": {
        "kernelspec": {
            "name": "python3",
            "display_name": "Python 3",
            "language": "python"
        }
    },
    "nbformat": 4,
    "nbformat_minor": 4,
    "cells": [
        {
            "attachments": {},
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "# \u003cimg style=\"float: left; padding-right: 10px; width: 45px\" src=\"https://raw.githubusercontent.com/Harvard-IACS/2018-CS109A/master/content/styles/iacs.png\"\u003e CS109A Introduction to Data Science \n",
                "\n",
                "## Lecture 2, Exercise 1: RegEx\n",
                "\n",
                "\n",
                "**Harvard University**\u003cbr/\u003e\n",
                "**Fall 2020**\u003cbr/\u003e\n",
                "**Instructors**: Pavlos Protopapas, Kevin Rader, and Chris Tanner\n",
                "\n",
                "---"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": 0,
            "metadata": {},
            "outputs": [],
            "source": [
                "import re\n",
                "import requests"
            ]
        },
        {
            "attachments": {},
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "For the three parts to this Exercise, you will be extracting contents from the `sample_string` provided below."
            ]
        },
        {
            "cell_type": "code",
            "execution_count": 0,
            "metadata": {},
            "outputs": [],
            "source": [
                "# she was elected as State Representative of my district (Somerville) this week\n",
                "# (I am not blasting contact information of random people)\n",
                "sample_string = \"Hello, my name is Erika Uyterhoeven, and my email is erika@electerika.com!!\""
            ]
        },
        {
            "attachments": {},
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "## Part A: Your first RegEx (or at least in CS109A)"
            ]
        },
        {
            "attachments": {},
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "Write code (fill in the blank) that returns a list of all \"words\" in `sample_string`. **NOTE:** here, we consider a \"word\" to be any contiguous group of characters that are separated by whitespace. Thus, words **include** any attached punctuation. For example, the very first \"word\" is `Hello,`, and the very last word is `erika@electerika.com!!`"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": 0,
            "metadata": {},
            "outputs": [],
            "source": [
                "### edTest(test_a) ###\n",
                "words = re.findall('___',sample_string)\n",
                "words"
            ]
        },
        {
            "attachments": {},
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "## Part B: No punctuation\n",
                "In the cell below, write a very similar RegEx, but now return all words **excluding** any attached punctuation marks, even if it's more than 1 punctuation mark. For example, the first word is now `Hello` (without the `,`) and the last word is `erika@electerika.com` (without `!!`). **NOTE:** For this part, let's assume there are only 2 types of punctuations in the world, `!` and `,`. Thus, do not worry about properly treating others (e.g., `.;[]`)"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": 0,
            "metadata": {},
            "outputs": [],
            "source": [
                "### edTest(test_b) ###\n",
                "words = re.findall('___',sample_string)\n",
                "words"
            ]
        },
        {
            "attachments": {},
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "## Part C: E-mail only\n",
                "In the cell below, write a RegEx to extract just her e-mail address, **excluding** the exclamation points. Thus, you should return `erika@electerika.com`. To be clear, you do not need to write a robust RegEx that properly matches all patterns of `____@___.__`. It is fine to target just this one e-mail by assuming the template is `____@____` (without attached `!`)"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": 0,
            "metadata": {},
            "outputs": [],
            "source": [
                "### edTest(test_c) ###\n",
                "words = re.findall('___',sample_string)\n",
                "words"
            ]
        }
    ]
}
